name: CI/CD Frontend
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
jobs:
  install:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3  # Update to Node.js 20 version
      - name: Set up Node.js
        uses: actions/setup-node@v4  # Update to latest version
        with:
          node-version: '20'      # Specify Node.js 20
      - name: Install dependencies
        run: npm install
      - name: Build
        run: npm run build
        # Persist the built artifacts
        # You may need to adjust the paths if necessary
        # persist the build output as an artifact
        # you can download these artifacts in subsequent jobs or workflows
      - name: Cache node modules
        uses: actions/cache@v2
        with:
          path: node_modules
          key: ${{ runner.os }}-node-modules-${{ hashFiles('**/package-lock.json') }}
          
      - name: Cache build output
        uses: actions/cache@v2
        with:
          path: dist
          key: ${{ runner.os }}-dist-${{ hashFiles('dist/**') }}

  test_unit:
    runs-on: ubuntu-latest
    needs: install
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2  # Update to Node.js 20

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Run unit tests
        run: npm run test:unit

  test_e2e:
    runs-on: ubuntu-latest
    needs: install
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2  # Update to Node.js 20

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Install Cypress
        run: npm run cypress install

      - name: Run end-to-end tests
        run: npm run test:e2e
